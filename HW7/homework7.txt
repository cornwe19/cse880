1. Creating KD-Trees: Insert (50,30), (30,25), (40,25), (70,30), (70,25) into a KD-Tree
   iter-1: (30,25), (40,25), (50,30), (70,30), (70,25)
                              (50,30)
   iter-2: (30,25), (40,25) -- (70,25), (70,30)
                              (50,30)
                              /      \
                           (40,25)   (70,30)
   iter-3: (30,25) -- (70,25)
                              (50,30)
                              /      \
                           (40,25)   (70,30)
                            /         /
                        (30,25)    (70,25)

2. Inserting into an R*-Tree
   (1,3), (10,3), (4,8), (7,4), (4,5), (7,5):


3. Forced reinsert is a maintenance technique in R* trees in which nodes of the tree are removed and reinserted into the tree to allow the ChooseSubtree algorithm a chance to better optimiize the directory rectangles of the tree. Early nodes can establish sub-optimal directory structures when more nodes are added later in the tree's life-span. Since no regular maintenance (aside from very localized splits) takes place to ensure the overall query performance for an R*Tree during insertion, these structures may never be recomputed leaving the tree in a sub-optimal state. Reinsertion allows these structures to be recomputed optimizing for the most up to date set of data.
